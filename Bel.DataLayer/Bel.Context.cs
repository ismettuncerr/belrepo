//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bel.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class beldatabaseEntities : DbContext
    {
        public beldatabaseEntities()
            : base("name=beldatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MunicipalityClass> MunicipalityClass { get; set; }
        public virtual DbSet<SchoolClass> SchoolClass { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserRole> UserRole { get; set; }
        public virtual DbSet<ClassHour> ClassHour { get; set; }
        public virtual DbSet<Reservation> Reservation { get; set; }
        public virtual DbSet<Gallery> Gallery { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Contact> Contact { get; set; }
        public virtual DbSet<Slider> Slider { get; set; }
        public virtual DbSet<About> About { get; set; }
    
        public virtual ObjectResult<ReservationClassHour_Result> ReservationClassHour(Nullable<int> municipalityClassId, Nullable<System.DateTime> reservationDate)
        {
            var municipalityClassIdParameter = municipalityClassId.HasValue ?
                new ObjectParameter("MunicipalityClassId", municipalityClassId) :
                new ObjectParameter("MunicipalityClassId", typeof(int));
    
            var reservationDateParameter = reservationDate.HasValue ?
                new ObjectParameter("ReservationDate", reservationDate) :
                new ObjectParameter("ReservationDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReservationClassHour_Result>("ReservationClassHour", municipalityClassIdParameter, reservationDateParameter);
        }
    }
}
